<?xml version="1.0"?>

<robot name="iris" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Properties -->
  <xacro:property name="namespace" value="iris" />
  <xacro:property name="rotor_velocity_slowdown_sim" value="20" />
  <xacro:property name="mesh_file" value="model://meshes/carrier.dae"/>
  <xacro:property name="use_collision_mesh" value="false"/>
  <xacro:property name="use_friction" value="true"/>
  <xacro:property name="collision_mesh_file" value="model://meshes/carrier.dae"/>
  <xacro:property name="mesh_scale" value="1 1 1"/>
  <xacro:property name="mass" value="1.7" /> <!-- [kg] -->
  <xacro:property name="body_width" value="0.75" /> <!-- [m] -->
  <xacro:property name="body_height" value="0.1" /> <!-- [m] -->
  <xacro:property name="mass_rotor" value="0.005" /> <!-- [kg] -->
  <xacro:property name="arm_length_y_rl" value="0.41499663" /> <!-- [m] -->
  <xacro:property name="arm_length_y_fb" value="0.20749832" /> <!-- [m] -->
  <xacro:property name="arm_length_x" value="0.35939762" /> <!-- [m] -->
  <xacro:property name="rotor_offset_top" value="0.05" /> <!-- [m] -->
  <xacro:property name="radius_rotor" value="0.128" /> <!-- [m] -->
  <xacro:property name="motor_constant" value="8.54858e-06" /> <!-- [kg.m/s^2] -->
  <xacro:property name="moment_constant" value="0.06" /> <!-- [m] -->
  <xacro:property name="time_constant_up" value="0.0125" /> <!-- [s] -->
  <xacro:property name="time_constant_down" value="0.025" /> <!-- [s] -->
  <xacro:property name="max_rot_velocity" value="1100" /> <!-- [rad/s] -->
  <xacro:property name="rotor_drag_coefficient" value="8.06428e-04" />
  <xacro:property name="rolling_moment_coefficient" value="0.000001" />
  <xacro:property name="color" value="$(arg visual_material)" />

  <!-- Property Blocks -->
  <xacro:property name="body_inertia">
    <inertia ixx="0.0347563" ixy="0.0" ixz="0.0" iyy="0.0458929" iyz="0.0" izz="0.0977" /> <!-- [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] -->
  </xacro:property>

  <!-- inertia of a single rotor, assuming it is a cuboid. Height=3mm, width=15mm -->
  <xacro:property name="rotor_inertia">
    <inertia
    ixx="${1/12 * mass_rotor * (0.015 * 0.015 + 0.003 * 0.003) * rotor_velocity_slowdown_sim}"
    iyy="${1/12 * mass_rotor * (4 * radius_rotor * radius_rotor + 0.003 * 0.003) * rotor_velocity_slowdown_sim}"
    izz="${1/12 * mass_rotor * (4 * radius_rotor * radius_rotor + 0.015 * 0.015) * rotor_velocity_slowdown_sim}"
    ixy="0.0" ixz="0.0"  iyz="0.0" /> <!-- [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] -->
  </xacro:property>

  <!-- Included URDF Files -->
  <xacro:include filename="$(find docking_description)/urdf/multirotor_base.xacro" />

  <!-- Instantiate multirotor_base_macro once -->
  <xacro:multirotor_base_macro
    robot_namespace="${namespace}"
    mass="${mass}"
    body_width="${body_width}"
    body_height="${body_height}"
    mesh_file="${mesh_file}"
    mesh_scale="${mesh_scale}"
    color="${color}"
    >
    <xacro:insert_block name="body_inertia" />
  </xacro:multirotor_base_macro>

  <!-- Instantiate docking base -->
  <!-- Xacro properties -->
  <xacro:property name="len" value="0.695" />
  <xacro:property name="cam" value="0.01" />

  <!-- Docker link -->
  <link name="${namespace}/docker_link">
    <visual>
      <origin xyz="0 0 0.012" rpy="0 0 0" />
      <geometry>
        <mesh filename="model://meshes/base_visual.dae" scale="1 1 1" />
      </geometry>
      <material name="blue">
        <color rgba="0 0.5 1 1"/>
      </material>
    </visual>
    <!-- Base collision, mass and inertia -->
    <collision>
      <origin xyz="0 0 0.012" rpy="0 0 0" />
      <geometry>
        <mesh filename="model://meshes/base_collision.dae" scale="1 1 1" />
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>0.0</mu>
            <mu2>0.0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
  </link>

  <!-- Docker joint -->
  <joint name="${namespace}/docker_joint" type="fixed">
    <origin xyz="0 0 0.0156" rpy="0 0 0" />
    <parent link="${namespace}/base_link" />
    <child link="${namespace}/docker_link" />
  </joint>

  <gazebo reference="${namespace}/docker_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <!-- Camera -->
  <link name="${namespace}/camera_link">
    <visual>
      <origin xyz="${cam/2} -0.001 -0.002" />
      <geometry>
        <box size="${cam} ${cam} ${cam}"/>
      </geometry>
      <material name="darkgray">
        <color rgba=".2 .2 .2 1"/>
      </material>
    </visual>
    <!-- Camera collision, mass and inertia -->
    <collision>
      <origin xyz="${cam/2} -0.001 -0.002" />
      <geometry>
        <box size="${cam} ${cam} ${cam}"/>
      </geometry>
    </collision>
  </link>

  <!-- Camera joint -->
  <joint name="${namespace}/camera_joint" type="fixed">
    <parent link="${namespace}/docker_link"/>
    <child link="${namespace}/camera_link"/>
    <origin xyz="0 0 ${len}" rpy="0 -1.5708 0" /> 
  </joint>

  <gazebo reference="${namespace}/camera_link">
    <material>Gazebo/Black</material>
  </gazebo>
    
  <gazebo reference="${namespace}/camera_link">
    <material>Gazebo/Black</material>
    <sensor type="camera" name="camera">
        <update_rate>30.0</update_rate>
        <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>${namespace}/camera_link</frameName>
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Instantiate rotors -->
  <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="far_right"
    direction="cw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="${namespace}/base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="0"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    mesh="propeller"
    color="DarkGrey">
    <origin xyz="0 -${arm_length_y_rl} ${rotor_offset_top}" rpy="0 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

  <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="far_left"
    direction="ccw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="${namespace}/base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="1"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    mesh="propeller"
    color="DarkGrey">
    <origin xyz="0 ${arm_length_y_rl} ${rotor_offset_top}" rpy="0 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

  <xacro:vertical_rotor robot_namespace="${namespace}"
    suffix="front_left"
    direction="cw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="${namespace}/base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="2"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    mesh="propeller"
    color="Blue">
    <origin xyz="${arm_length_x} ${arm_length_y_fb} ${rotor_offset_top}" rpy="0 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

  <xacro:vertical_rotor robot_namespace="${namespace}"
    suffix="back_right"
    direction="ccw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="${namespace}/base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="3"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    mesh="propeller"
    color="DarkGrey">
    <origin xyz="-${arm_length_x} -${arm_length_y_fb} ${rotor_offset_top}" rpy="0 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

  <xacro:vertical_rotor robot_namespace="${namespace}"
    suffix="front_right"
    direction="ccw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="${namespace}/base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="4"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    mesh="propeller"
    color="Blue">
    <origin xyz="${arm_length_x} -${arm_length_y_fb} ${rotor_offset_top}" rpy="0 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

  <xacro:vertical_rotor robot_namespace="${namespace}"
    suffix="back_left"
    direction="cw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="${namespace}/base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="5"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    mesh="propeller"
    color="DarkGrey">
    <origin xyz="-${arm_length_x} ${arm_length_y_fb} ${rotor_offset_top}" rpy="0 0 0" />
    <xacro:insert_block name="rotor_inertia" />
  </xacro:vertical_rotor>

</robot>
